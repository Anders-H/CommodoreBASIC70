APPEND	Kompletterar innehållet i en fil.
BACKUP	Kopierar en disk.
BLOAD	Läser in en binär fil till en angiven plats i minnet. Används till exempel för att läsa in maskinkodsprogram eller media.
BOOT	Laddar in ett program flaggat som "bootbart" från disk. Om en diskdrive är inkopplad försöker Commodore 128 att "boota" vid uppstart.
BOX	Ritar en rektangel på skärmen.
BSAVE	Sparar innehållet i angivna adresser i RAM till disk. Används till exempel för att spara maskinkodsprogram eller media.
BUMP	Testar om två sprites har kolliderat med varandra.
CHAR	Ritar ett tecken på skärmen
CIRCLE	Ritar en cirkel på skärmen.
COLLECT	Frigör utrymme på en disk som korrupta filer tar upp.
COLLISION	Identifierar sprite-kollisioner eller kollision med ljuspenna och hoppar till önskad programrad om så inträffat.
COLOR	Väljer färg ur färgpaletten att använda som border, bakgrund, grafikfärg eller textfärg. Commodore 128 delar färgpalett med Commodore 64 och VIC-20 när Commodore 128 används i 40-kolumnsläge. I 80-kolumnsläge (som endast kan visa text) har Commodore 128 en annorlunda färgpalett. 
CONCAT	Slår samman två datafiler.
COPY	Kommandot COPY används på system med två diskettstationer för att kopiera en fil från den ena disketten till den andra.
DCLEAR	Rensar alla öppna filer på angiven drive. Man kan även specificera enhetsnummer.
DCLOSE	DCLOSE stänger en fil som varit öppen för läsning eller skrivning.
DELETE	Kommandot raderar en eller flera rader av BASIC-kod från minnet. Man kan ange ett specifikt radnummer eller ett omfång.
DLOAD	Hämtar ett namngivet BASIC-program från disk, med möjlighet att specificera enhetsnummer och disknummer (i händelse av att enheten är dubbelsidig, som till exempel Commodore 1571). Motsvarar LOAD "filnamn",8,0 på VIC-20/C64.
DO	Startar antingen en evighetsiteration, en 0-till-flera-iteration eller en 1-till-flera-iteration, som stängs med LOOP. Tillsammans med WHILE eller UNTIL är iterationen av 0-till-flera-typ, och ensamt är den antingen en evighetsiteration eller en 1-till-flera-iteration, beroende på vad som följer efter LOOP, om något.
DOPEN	Öppnar en logisk fil av valfri typ (sekventiell, program, o.s.v.) för läsning och/eller skrivning.
DRAW	Ritar en pixel, en linje eller en polygon med valfri färg ur färgpaletten.
DS	Presenterar det senaste DOS-felets nummer.
DS$	Presenterar en beskrivande text om det senaste DOS-felet.
DSAVE	Sparar ett BASIC-program till angiven enhet.
DVERIFY	Jämför BASIC-programmet i minnet med ett BASIC-program i en fil, för att säkerställa att programmet är korrekt lagrat.
ENVELOPE	Definierar karaktären för ett musikinstruments volym.
ERR$	ERR$ är ren funktion som ger det felmeddelande vars kod man skickar in som argument. Tillsammans med ER ger ERR$ en beskrivning av det senast inträffade felet.
EXIT	Används mellan DO och LOOP. Kommandot lämnar en pågående iteration som öppnats med DO och fortsätter exekveringen efter LOOP.
FILTER	Konfigurerar ljudchipets (SID) filterparametrar. Filter tar parametrar som styr frekvens, filtertyp och resonans.
GETKEY	Tar en lista med variabler som argument, och sparar en tangenttryckning i varje variabel.
GRAPHIC	Väljer grafikläge (textläge, bitmapsläge, med flera).
GSHAPE	Hämtar grafikdata från en strängvariabel (som sparats med SSHAPE) och ritar ut den på skärmen.
HELP	Om ett program bryts på grund av programkörningsfel, visar HELP den felaktiga raden.
HEX$	Tar ett heltal och ger en sträng innehållande ett hexadecimalt tal av motsvarande värde. HEX$(10) ger A. Den funktion som konverterar tillbaka till decimal heter DEC.
INSTR	Ger en strängs position i en annan sträng.
JOY	Ger aktuell riktning för valfri joystick.
KEY	Visar eller kopplar kommandon till funktionstangenterna (F1 till F8).
LOCATE	Placerar pixelmarkören på angiven plats, som kan användas för en ritoperation (till exempel DRAW).
LOOP	Stänger antingen en evighetsiteration, en 0-till-flera-iteration eller en 1-till-flera-iteration, som öppnats med DO. Tillsammans med WHILE eller UNTIL är iterationen av 1-till-flera-typ, och ensamt är den antingen en evighetsiteration eller en 0-till-flera-iteration, beroende på vad som följer efter DO, om något.
MONITOR	Startar den inbyggda maskinkodsmonitorn.
MOVSPR	Positionerar eller flyttar en sprite på skärmen.
PAINT	Fyller en area, avgränsad av pixlar, med en färg.
PEN	Ger X- och Y-positionen för ljuspennan (som är ett pekdon för CRT-skärmar).
PLAY	Spelar upp musik som beskrivs av en textsträng.
POT	Läser av paddelns position. (En paddel är en ratt som används för analog styrning i två riktningar, till skillnad från en styrspak som används för digital styrning i fyra riktningar.)
PRINT USING	Skriver ut formaterad text.
PUDEF	Anger val av symboler och skiljetecken för PRINT USING.
RCLR	Läser av aktuell färgpalett för olika grafiklägen.
RDOT	Läser grafikmarkörens position och underliggande färg.
RECORD	Placerar filpekaren när du arbetar med en öppen sekventiell fil.
RENAME	Ändrar namnet på en fil på disk.
RESUME	Används för felhantering i runtime-läge. Kommandot hoppar till en önskad rad efter att ett fångat fel (TRAP) är hanterat.
RGR	Håller aktuellt skärmläge (0-5).
RREG	Läser innehållet i processorns ackumulator, statusflaggor och register.
RSPCOLOR	För en sprite i flerfärgsläge ger RSPCOLOR information om färg 1 eller 2.
RSPPOS	Ger information om position och hastighet för valfri sprite.
RSPRITE	Ger information om inställningar för valfri sprite.
RWINDOW	Ger information om aktuellt textfönster.
SCALE	Slår på och/eller ställer in grafikskalning, eller stänger av grafikskalning.
SCRATCH	Raderar en fil från en diskett.
SPRCOLOR	Anger vilken färg/vilka färger en sprite ska visas med.
SPRDEF	Startar Commodore 128:s inbyggda sprite-editor.
SPRITE	Slår på och eller konfigurerar en sprite, eller slår av en sprite.
SPRSAV	Kopierar pixeldata i en strängvariabel till en av åtta tillgängliga sprites.
SSHAPE	Sparar pixeldata i en strängvariabel, som sedan kan ritas ut med GSHAPE.
TEMPO	Anger hur snabbt musik spelas av PLAY-kommandot. 0 är långsammast och 255 är snabbast.
TRAP	TRAP, TRON och TROFF är kommandon för felsökning (debugging). Kommandot TRAP hoppar till ett angivet radnummer i händelse av att ett fel uppstår.
TROFF	TROFF inaktiverar TRON.
TRON	TRON aktiverar felsökningsläge, vilket innebär att Commodore 128 för varje rad som exekveras, skriver ut radnumret för raden i fråga. Felsökningsläget inaktiveras med TROFF.
WHILE	En iteration som exekverar så länge ett binärt uttryck utvärderas som sant. WHILE avslutas med WEND.
WIDTH	Anger horisontell bredd på vektorgrafik (som till exempel LINE eller CIRCLE). Kan vara 1 (enkel bredd) eller 2 (dubbel bredd).
XOR	En logisk binär operator som ger sant som svar om operanderna är olika. Falskt xor falskt är falskt, sant xor sant är falskt, sant xor falskt är sant och falskt xor sant är sant.

KAPITEL
=======

Klar: Introduktion
Klar: Om Commodore 128
Påbörjad: Allmänna förbättringar i BASIC
Ej påbörjad: Text
Ej påbörjad: Grafik
Ej påbörjad: Sprites
Klar: Ljud
Ej påbörjad: Musik
Ej påbörjad: Avancerade ljudeffekter
Ej påbörjad: Användarinteraktion
Ej påbörjad: 80-kolumnsläge
Påbörjad: Commodore BASIC 7.0 DOS
Ej påbörjad: Commodore 64-läge
Ej påbörjad: CP/M
Påbörjad: Appendix A: Felsökning
Klar: Appendix B: Ordförklaringar
Klar: Appendix C: Jämförelse
Ej påbörjad: Appendix D: Maskinkod

==================================================

Deactivate RUN/STOP + RESTORE:
POKE808,PEEK(808)-3

Enable RUN/STOP + RESTORE
POKE 808,110

Direct jump to C64 mode (without "ARE YOU SURE?"):
SYS65357 or SYS57931

Display mode:

PRINT RGR(0) - values equivalent command GRAPHIC
PEEK(215) - 0 = 40 column mode / 128 = 80 column mode

Is disk write-protected?

10 OPEN15,8,15:PRINT#1,"M-R";CHR$(30);CHR$(0):GET#1,A$:CLOSE1
20 IF ASC(A$+CHR$(1))=1 THEN PRINT"DISK IS WRITE PROTECTED"

LOAD/SAVE function keys definitions:

BSAVE "name",D0,U8,B0,P4096 TO P4352
BLOAD "name",D0,U8

Give F1-F8 same function as in C64 mode:
POKE 828,183

Clear function keys definitions:
POKE 4096,0

Is printer turned ON?

10 OPEN 4,4:CLOSE 4
20 IF ST <> 0 THEN PRINT "TURN ON PRINTER!": goto 40
30 PRINT "PRINTER IS ONLINE.":GOTO 80
40 PRINT "RUN AGAIN ?"
50 GET A$: IF A$="" THEN 50
60 IF A$="N" THEN END
70 GOTO 10
80 REM **** CONTINUE ****

USING WINDOWS:

Creating and cancel WINDOW:
ESC,T - Top left corner
ESC,B - Bottom right corner
2× CLR/HOME - cancel window

IN/OUT of WINDOW:
110 WINDOW 0,19,39,20
120 PRINT"IN WINDOW" : GETKEYA$
130 POKE 235,1: PRINT
140 PRINT"OUT OF WINDOW": GETKEY A$
150 POKE 235,10: PRINT
160 PRINT"INSIDE AGAIN"

WINDOW PEEK:
228 bottom row
229 top row
230 left column
231 right column

235 cursor row
236 cursor column
237 max screen rows
238 max screen columns

Simple using BEEP:
CTRL+G or CHR$(7)

CHR$(131)
- RUNs program, but don't works typing PRINTCHR$(131), but in keyboard buffer as one character instead of characters R,U,N,[CR]

Writting on selected position (alternative of BASIC command CHAR):
SYS 65520, 0, row, column: PRINT "TEXT"


Some PEEKs&POKEs

Clear keyboard buffer:
POKE 208,0

Loading and Saving:

DISABLE LOAD POKE 816,0
ENABLE LOAD POKE 816,108
DISABLE SAVE POKE 818,1
ENABLE SAVE POKE 818,78

CHANGE PRINT COLOR POKE 241,(0-15)

Switching UPPER CASE and LOWER CASE 40/80 (in 80 column mode are used both character sets):

USE LOWER CASE WITH CHAR POKE 4588,216
USE UPPER CASE WITH CHAR POKE 4588,208
SWITCH TO LOWER CASE CHR$(14)
SWITCH TO UPPER CASE CHR$(142)

2 MHz or 1 MHz?

PEEK(53296)
252 (SLOW - 1MHz)
253 (FAST - 2MHz)
2Mhz (works in both 64 and 128 mode) POKE 53296,1
1Mhz (works in both 64 and 128 mode) POKE 53296,0

Detect which computer program is on:

PEEK(65534)...
72= C64 (also C128 in C64 mode)
23= C128
255= C Plus/4, C16
114= VIC20

Reset computer:
SYS 65341

Clear 40 screen:
SYS 27440

Listing of program:

POKE 24,37 - disable line numbers
POKE 24,27 - enable line numbers

Reset the computer then typing list:
POKE 774,61:POKE 775,255

Disable list - only empty lines:
POKE 774,139:POKE 24,37

Disable list - only line numbers:
POKE 774,139

Enable list:
POKE 774,81
